{"version":3,"sources":["core/Drawer.jsx","Snake.jsx","App.js","serviceWorker.js","index.js"],"names":["Drawer","props","canvas","scaling","frameCount","r","y","ySize","x","xSize","display","colorStore","1","code","color","this","onFrame","requestAnimationFrame","objs","ctx","fillStyle","fillRect","strokeStyle","strokeRect","push","forEach","item","tagName","posX","posY","width","height","drawImage","naturalWidth","naturalHeight","getContext","type","style","ref","instance","border","BlazeComponent","player1","direction","nextDirection","score","footprint","snakes","player2","bugPosition","skipFrames","running","tips","imgMode","parseInt","Math","random","getRandom","index","sn","getNewBugs","window","addEventListener","e","key","drawer","regColor","img","Image","src","img2","nextStep","snakePlayer","frames","$data","checkGameover","clearAll","unshift","_s","pop","addFrame","delBlock","nextStep2","setBlock","margin","textAlign","href","target","marginTop","onClick","fontSize","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f9e5c065.chunk.js","sourcesContent":["import React from 'react';\r\nimport { BlazeComponent } from 'blazereact';\r\n\r\nexport default class Drawer extends BlazeComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.canvas = null;\r\n        this.scaling = 10;\r\n        this.frameCount=0;\r\n        let r = [];\r\n        for (var y = 0; y < props.ySize; y++) {\r\n            for (var x = 0; x < props.xSize; x++) {\r\n                if (!r[y]) {\r\n                    r[y] = [];\r\n                }\r\n\r\n                r[y][x] = 0;\r\n            }\r\n        }\r\n        this.display=r;\r\n\r\n        this.colorStore={\r\n            1:\"#444\",\r\n        }\r\n    }\r\n\r\n    data() {\r\n        return { display: null };\r\n    }\r\n\r\n    regColor(code,color){\r\n        this.colorStore[code]=color;\r\n    }\r\n\r\n    onFrame(){\r\n        this.props.onFrame&&this.props.onFrame(this.frameCount++);\r\n        requestAnimationFrame(()=>{this.onFrame()});\r\n        let objs=[];\r\n        for(var y in this.display){\r\n            for(var x in this.display[y]){\r\n                if(this.display[y][x]==0){\r\n                    this.ctx.fillStyle=\"#fff\";\r\n                    this.ctx.fillRect(x * this.scaling, y * this.scaling, this.scaling, this.scaling);\r\n\r\n                    this.ctx.strokeStyle=\"#eee\";\r\n                    this.ctx.strokeRect(x * this.scaling, y * this.scaling, this.scaling, this.scaling);\r\n                }\r\n                else{\r\n                    objs.push({x:x,y:y});\r\n                }\r\n            }\r\n        }\r\n\r\n        objs.forEach(item=>{\r\n            let code=this.display[item.y][item.x];\r\n            let color=this.colorStore[code];\r\n            if(typeof(color)==\"object\"&&color.tagName==\"IMG\"){\r\n                let posX=item.x * this.scaling;\r\n                let posY=item.y * this.scaling;\r\n                posX=posX-color.width/2;\r\n                posY=posY-color.height/2;\r\n                this.ctx.drawImage(color,0,0,color.naturalWidth,color.naturalHeight,posX, posY,color.width,color.height);\r\n            }\r\n            else if(color){\r\n                this.ctx.fillStyle=color;\r\n                this.ctx.fillRect(item.x * this.scaling, item.y * this.scaling, this.scaling, this.scaling);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.ctx=this.canvas.getContext(\"2d\");\r\n        requestAnimationFrame(()=>{this.onFrame()});\r\n    }\r\n\r\n    setBlock(x, y, type) {\r\n        if(!type){\r\n            this.display[y][x]=1;\r\n        }\r\n        else{\r\n            this.display[y][x]=type;\r\n        }\r\n    }\r\n\r\n    delBlock(x, y) {\r\n        this.display[y][x]=0;\r\n    }\r\n\r\n    clearAll() {\r\n        this.frameCount=0;\r\n        let r = [];\r\n\r\n        for (var y = 0; y < this.props.ySize; y++) {\r\n            for (var x = 0; x < this.props.xSize; x++) {\r\n                if (!r[y]) {\r\n                    r[y] = [];\r\n                }\r\n\r\n                r[y][x] = 0;\r\n            }\r\n        }\r\n\r\n        this.display = r;\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ width: \"100%\" }} {...this.props}>\r\n                <canvas \r\n                ref={instance => { this.canvas = instance }} \r\n                width={this.props.xSize * this.scaling} \r\n                height={this.props.ySize * this.scaling} \r\n                style={{ border: \"1px solid #000\" }}></canvas>\r\n            </div>)\r\n    }\r\n}","import React from 'react';\r\nimport { BlazeComponent } from 'blazereact';\r\nimport Drawer from './core/Drawer';\r\n\r\nexport default class extends BlazeComponent {\r\n    drawer;\r\n    constructor(props) {\r\n        super(props);\r\n        this.player1 = {\r\n            direction: \"right\",\r\n            nextDirection: \"\",\r\n            score: 0,\r\n            footprint: [],\r\n            snakes: []\r\n        }\r\n        this.player2 = {\r\n            direction: \"right\",\r\n            nextDirection: \"\",\r\n            score: 0,\r\n            footprint: [],\r\n            snakes: []\r\n        }\r\n        //this.direction = \"right\";\r\n        //this.score = 0;\r\n        //this.footprint=[];\r\n        //this.snakes = [];\r\n\r\n        this.bugPosition = [-1, -1]\r\n\r\n        this.xSize = 40;\r\n        this.ySize = 30;\r\n\r\n\r\n        this.nextDirection = \"\";\r\n    }\r\n    data() {\r\n        return {\r\n            skipFrames: 5,\r\n            running: false,\r\n            tips: \"Press Button TO Start!\",\r\n            imgMode:false\r\n        }\r\n    }\r\n    getRandom(x, y) {\r\n        //x 下限 \r\n        //y 上限\r\n        return parseInt(Math.random() * (y - x + 1) + x);\r\n    }\r\n\r\n    getNewBugs() {\r\n        let x = this.getRandom(0, this.xSize - 1);\r\n        let y = this.getRandom(0, this.ySize - 1);\r\n        for (let index in this.snakes) {\r\n            let sn = this.snakes[index];\r\n            if (x == sn[0] && y == sn[1]) {\r\n                return this.getNewBugs();\r\n            }\r\n        }\r\n\r\n        return [x, y]\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"keypress\", (e) => {\r\n            switch (e.key) {\r\n                case \"w\": case \"W\":\r\n                    if (this.player1.direction != \"down\") {\r\n                        this.player1.nextDirection = \"up\";\r\n                    }\r\n                    break;\r\n                case \"a\": case \"A\":\r\n                    if (this.player1.direction != \"right\") {\r\n                        this.player1.nextDirection = \"left\";\r\n                    }\r\n                    break;\r\n                case \"s\": case \"S\":\r\n                    if (this.player1.direction != \"up\") {\r\n                        this.player1.nextDirection = \"down\";\r\n                    }\r\n                    break;\r\n                case \"d\": case \"D\":\r\n                    if (this.player1.direction != \"left\") {\r\n                        this.player1.nextDirection = \"right\";\r\n                    }\r\n                    break;\r\n                case \"i\": case \"I\":\r\n                    if (this.player2.direction != \"down\") {\r\n                        this.player2.nextDirection = \"up\";\r\n                    }\r\n                    break;\r\n                case \"j\": case \"J\":\r\n                    if (this.player2.direction != \"right\") {\r\n                        this.player2.nextDirection = \"left\";\r\n                    }\r\n                    break;\r\n                case \"k\": case \"K\":\r\n                    if (this.player2.direction != \"up\") {\r\n                        this.player2.nextDirection = \"down\";\r\n                    }\r\n                    break;\r\n                case \"l\": case \"L\":\r\n                    if (this.player2.direction != \"left\") {\r\n                        this.player2.nextDirection = \"right\";\r\n                    }\r\n                    break;\r\n            }\r\n            //console.log(this.direction)\r\n        })\r\n\r\n        this.drawer.regColor(2, \"#f44\");\r\n\r\n        this.drawer.regColor(21, \"#fee\");\r\n\r\n        this.drawer.regColor(3, \"#44f\");\r\n\r\n        this.drawer.regColor(31, \"#eef\");\r\n\r\n\r\n        let img=new Image(120,120);\r\n        img.src=\"https://kagamine.cn/snake/k/right.png\"\r\n        this.drawer.regColor(25,img);\r\n        \r\n        let img2=new Image(120,120);\r\n        img2.src=\"https://kagamine.cn/snake/k/left.png\"\r\n        this.drawer.regColor(26,img2);\r\n\r\n        img=new Image(120,120);\r\n        img.src=\"https://kagamine.cn/snake/k/right2.png\"\r\n        this.drawer.regColor(35,img);\r\n        \r\n        img2=new Image(120,120);\r\n        img2.src=\"https://kagamine.cn/snake/k/left2.png\"\r\n        this.drawer.regColor(36,img2);\r\n        // setInterval(() => {\r\n        //     if (this.$data.running) {\r\n        //         this.onFrame();\r\n        //     }\r\n        // }, this.$data.interval);\r\n    }\r\n\r\n    checkGameover(nextStep, snakePlayer) {\r\n        if (nextStep[0] < 0 ||\r\n            nextStep[0] >= this.xSize ||\r\n            nextStep[1] < 0 ||\r\n            nextStep[1] >= this.ySize) {\r\n            return true;\r\n        }\r\n        for (let index in this.player1.snakes) {\r\n            let sn = this.player1.snakes[index];\r\n            if (nextStep[0] == sn[0] && nextStep[1] == sn[1]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        for (let index in this.player2.snakes) {\r\n            let sn = this.player2.snakes[index];\r\n            if (nextStep[0] == sn[0] && nextStep[1] == sn[1]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    onFrame(frames) {\r\n        if (!this.$data.running) {\r\n            return;\r\n        }\r\n        if (frames % (1 + this.$data.skipFrames) != 0) {\r\n            return;\r\n        }\r\n        if (this.bugPosition[0] == -1) {\r\n            this.score = 0;\r\n            // this.bugPosition[0] = this.getRandom(0, this.xSize - 1);\r\n            // this.bugPosition[1] = this.getRandom(0, this.ySize - 1);\r\n            this.bugPosition = this.getNewBugs();\r\n\r\n            //this.snakes.push([5, 5]);\r\n            this.player1.snakes = [];\r\n            this.player1.footprint = [];\r\n            this.player1.score = 0;\r\n            this.player1.nextDirection = \"\";\r\n            this.player1.direction = \"right\";\r\n            this.player1.snakes.push([5, 5]);\r\n            this.player1.snakes.push([4, 5]);\r\n            this.player2.snakes = [];\r\n            this.player2.footprint = [];\r\n            this.player2.score = 0;\r\n            this.player2.nextDirection = \"\";\r\n\r\n            if (this.player2.direction) {\r\n                this.player2.direction = \"right\";\r\n                this.player2.snakes.push([5, 10]);\r\n                this.player2.snakes.push([4, 10]);\r\n            }\r\n        }\r\n\r\n        if (this.player1.nextDirection) {\r\n            this.player1.direction = this.player1.nextDirection;\r\n        }\r\n\r\n        if (this.player2.nextDirection) {\r\n            this.player2.direction = this.player2.nextDirection;\r\n        }\r\n\r\n        //#region Player1\r\n        let nextStep = [];\r\n        switch (this.player1.direction) {\r\n            case \"left\":\r\n                nextStep = [this.player1.snakes[0][0] - 1, this.player1.snakes[0][1]]\r\n                break;\r\n            case \"right\":\r\n                nextStep = [this.player1.snakes[0][0] + 1, this.player1.snakes[0][1]]\r\n                break;\r\n            case \"up\":\r\n                nextStep = [this.player1.snakes[0][0], this.player1.snakes[0][1] - 1]\r\n                break;\r\n            case \"down\":\r\n                nextStep = [this.player1.snakes[0][0], this.player1.snakes[0][1] + 1]\r\n                break;\r\n        }\r\n        if (this.checkGameover(nextStep)) {\r\n            //GameOver\r\n            this.$data.running = false;\r\n            this.bugPosition = [-1, -1]\r\n            this.drawer.clearAll();\r\n            this.$data.tips = \"2P WIN!\";\r\n            return;\r\n        }\r\n\r\n\r\n        this.player1.snakes.unshift(nextStep);\r\n\r\n        //判断是否吃到虫子\r\n        if (nextStep[0] == this.bugPosition[0] && nextStep[1] == this.bugPosition[1]) {\r\n            this.bugPosition = this.getNewBugs();\r\n            this.player1.score += 1;\r\n        }\r\n        else {\r\n            var _s = this.player1.snakes.pop();\r\n            this.player1.footprint.push({\r\n                addFrame: frames,\r\n                x: _s[0],\r\n                y: _s[1]\r\n            })\r\n            this.drawer.delBlock(_s[0], _s[1]);\r\n        }\r\n        //#endregion\r\n\r\n        //#region Player2\r\n        let nextStep2 = [];\r\n        if (this.player2.direction) {\r\n            switch (this.player2.direction) {\r\n                case \"left\":\r\n                    nextStep2 = [this.player2.snakes[0][0] - 1, this.player2.snakes[0][1]]\r\n                    break;\r\n                case \"right\":\r\n                    nextStep2 = [this.player2.snakes[0][0] + 1, this.player2.snakes[0][1]]\r\n                    break;\r\n                case \"up\":\r\n                    nextStep2 = [this.player2.snakes[0][0], this.player2.snakes[0][1] - 1]\r\n                    break;\r\n                case \"down\":\r\n                    nextStep2 = [this.player2.snakes[0][0], this.player2.snakes[0][1] + 1]\r\n                    break;\r\n            }\r\n            if (this.checkGameover(nextStep2)) {\r\n                //GameOver\r\n                this.$data.running = false;\r\n                this.bugPosition = [-1, -1]\r\n                this.drawer.clearAll();\r\n                this.$data.tips = \"1P WIN!\";\r\n                return;\r\n            }\r\n\r\n\r\n            this.player2.snakes.unshift(nextStep2);\r\n\r\n            //判断是否吃到虫子\r\n            if (nextStep2[0] == this.bugPosition[0] && nextStep2[1] == this.bugPosition[1]) {\r\n                this.bugPosition = this.getNewBugs();\r\n                this.player2.score += 1;\r\n            }\r\n            else {\r\n                var _s = this.player2.snakes.pop();\r\n                this.player2.footprint.push({\r\n                    addFrame: frames,\r\n                    x: _s[0],\r\n                    y: _s[1]\r\n                })\r\n                this.drawer.delBlock(_s[0], _s[1]);\r\n            }\r\n        }\r\n        //#endregion\r\n\r\n        //Draw P1 Footprint\r\n        this.player1.footprint.forEach(item => {\r\n            if ((frames - item.addFrame) > 500) {\r\n                this.drawer.delBlock(item.x, item.y);\r\n            }\r\n            else {\r\n                this.drawer.setBlock(item.x, item.y, 21);\r\n            }\r\n        })\r\n\r\n        //Draw P2 Footprint\r\n        this.player2.footprint.forEach(item => {\r\n            if ((frames - item.addFrame) > 500) {\r\n                this.drawer.delBlock(item.x, item.y);\r\n            }\r\n            else {\r\n                this.drawer.setBlock(item.x, item.y, 31);\r\n            }\r\n        })\r\n\r\n        //Draw P1 Snake\r\n        this.player1.snakes.forEach((sn, index) => {\r\n            if (index == 0) {\r\n                if(this.$data.imgMode){\r\n                    if(this.player1.direction==\"left\"){\r\n                        this.drawer.setBlock(sn[0], sn[1], 26);\r\n                    }\r\n                    else{\r\n                        this.drawer.setBlock(sn[0], sn[1], 25);\r\n                    }\r\n                }\r\n                else{\r\n                    this.drawer.setBlock(sn[0], sn[1], 2);\r\n                }\r\n            }\r\n            else {\r\n                this.drawer.setBlock(sn[0], sn[1]);\r\n            }\r\n        })\r\n\r\n        //Draw P2 Snake\r\n        this.player2.snakes.forEach((sn, index) => {\r\n            if (index == 0) {\r\n                if(this.$data.imgMode){\r\n                    if(this.player2.direction==\"left\"){\r\n                        this.drawer.setBlock(sn[0], sn[1], 36);\r\n                    }\r\n                    else{\r\n                        this.drawer.setBlock(sn[0], sn[1], 35);\r\n                    }\r\n                }\r\n                else{\r\n                    this.drawer.setBlock(sn[0], sn[1], 3);\r\n                }\r\n            }\r\n            else {\r\n                this.drawer.setBlock(sn[0], sn[1]);\r\n            }\r\n        })\r\n\r\n        this.drawer.setBlock(this.bugPosition[0], this.bugPosition[1]);\r\n\r\n        this.$data.tips = \"Score1:\" + this.player1.score + \" Score2:\" + this.player2.score;\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ width: \"100%\", margin: \"auto\", textAlign: \"center\" }}>\r\n                <h1>Snake Game</h1>\r\n                <div>by LenShang</div>\r\n                <div>git:<a href=\"https://github.com/Lenshang/js-snake\" target=\"blank\">https://github.com/Lenshang/js-snake</a></div>\r\n                <div style={{marginTop:10}}>{this.$data.tips}</div>\r\n                {this.$data.running ? null : (\r\n                    <div>\r\n                        <button onClick={() => { this.$data.running = true; this.player2.direction = \"\" }}>start 1p</button>\r\n                        <button onClick={() => { this.$data.running = true; this.player2.direction = \"right\" }}>start 2p</button>\r\n                    </div>\r\n                )}\r\n                <a style={{fontSize:5,color:\"#cccccc\"}} href=\"javascript:void(0)\" onClick={() => { this.$data.imgMode = !this.$data.imgMode }}>dont Click me</a>\r\n                <Drawer onFrame={frames => { this.onFrame(frames) }} style={{ marginTop: 20 }} ref={instance => { this.drawer = instance }} xSize={this.xSize} ySize={this.ySize}></Drawer>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Snake from './Snake';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <div style={{width:\"100%\"}}>\r\n            <Snake></Snake>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}